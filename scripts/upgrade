#!/bin/bash

#=================================================
# GENERIC STARTING
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# LOAD SETTINGS
#=================================================
ynh_script_progression --message="Load settings" --weight=2

app=$YNH_APP_INSTANCE_NAME

version=$(ynh_app_setting_get $app version)
port=$(ynh_app_setting_get $app port)
overwrite_settings=$(ynh_app_setting_get $app overwrite_settings)
root_container=$(ynh_app_setting_get $app root_container)
friendly_name=$(ynh_app_setting_get $app friendly_name)

#=================================================
# CHECK VERSION
#=================================================

upgrade_type=$(ynh_check_app_version_changed)

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression --message="Ensure downward compatibility"

# If overwrite_settings doesn't exist, create it
if [ -z "$overwrite_settings" ]; then
	overwrite_settings=1
	ynh_app_setting_set $app overwrite_settings $overwrite_settings
fi

# If root_container doesn't exist, create it
if [ -z "$root_container" ]; then
	root_container="B"
	ynh_app_setting_set $app root_container $root_container
fi

# If friendly_name doesn't exist, create it
if [ -z "$friendly_name" ]; then
	friendly_name="Yunohost DLNA"
	ynh_app_setting_set $app friendly_name $friendly_name
fi

#=================================================
# BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
#=================================================
ynh_script_progression --message="Backup the app before upgrading" --weight=2

# Backup the current version of the app
ynh_backup_before_upgrade
ynh_clean_setup () {
	# restore it if the upgrade fails
	ynh_restore_upgradebackup
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# UPGRADE THE YUNOHOST.MULTIMEDIA DIRECTORY
#=================================================
ynh_script_progression --message="Upgrade the yunohost.multimedia directory" --weight=3

ynh_multimedia_build_main_dir

#=================================================
# UPGRADE MINIDLNA
#=================================================
ynh_script_progression --message="Upgrade MiniDLNA" --weight=3

if [ $version = "B" ]
then
	# Install the backport version. (If you have issues with the standard version from the stable repository)
	codename=$(ynh_debian_release)
	ynh_replace_string "__CODENAME__" "$codename" ../conf/minidlna.list
	cp -a ../conf/minidlna.list /etc/apt/sources.list.d/
	ynh_apt update
	ynh_package_install -t $codename-backports minidlna
else
	# Install the standard version from debian repository
	ynh_apt update
	ynh_package_install minidlna
fi

#=================================================
# INCREASE INOTIFY'S LIMITS
#=================================================
ynh_script_progression --message="Increase inotify's limits" --weight=2

# Increase the maximum number of files inotify can monitor.
cp -a ../conf/90-inotify_minidlna.conf /etc/sysctl.d/
# Then, reload the kernel configuration.
if ! IS_PACKAGE_CHECK; then
	sysctl -p /etc/sysctl.d/90-inotify_minidlna.conf
fi

#=================================================
# ADVERTISE SERVICE IN ADMIN PANEL
#=================================================

yunohost service add minidlna --log "/var/log/minidlna.log"

#=================================================
# CONFIGURE MINIDLNA
#=================================================
ynh_script_progression --message="Reconfigure MiniDLNA" --weight=2

# Overwrite the settings config file only if it's allowed
if [ $overwrite_settings -eq 1 ]
then
	# Verify the checksum of a file, stored by `ynh_store_file_checksum` in the install script.
	ynh_backup_if_checksum_is_different "/etc/minidlna.conf"

	ynh_replace_string "^#*media_dir=.*" "media_dir=/home/yunohost.multimedia/share" /etc/minidlna.conf
	ynh_replace_string "^#*port=.*" "port=$port" /etc/minidlna.conf
	ynh_replace_string "^#*friendly_name=.*" "friendly_name=$friendly_name" /etc/minidlna.conf
	ynh_replace_string "^#*root_container=.*" "root_container=$root_container" /etc/minidlna.conf
	ynh_replace_string "^#wide_links=.*" "wide_links=yes" /etc/minidlna.conf

	# Calculate and store the config file checksum into the app settings
	ynh_store_file_checksum "/etc/minidlna.conf"
fi

#=================================================
# RESTART MINIDLNA'S SERVICE
#=================================================
ynh_script_progression --message="Restart MiniDLNA" --weight=7

ynh_systemd_action --action=restart --service_name=minidlna

#=================================================
# SEND A README FOR THE ADMIN
#=================================================

# Get main domain and buid the url of the admin panel of the app.
admin_panel="https://$(grep portal_domain /etc/ssowat/conf.json | cut -d'"' -f4)/yunohost/admin/#/apps/$app"

message="You can find a config file at /etc/minidlna.conf

MiniDLNA is going to serve the files present in the directory /home/yunohost.multimedia/share

Please have a look to the documentation to learn more how to use MiniDLNA, https://yunohost.org/#/app_minidlna

You can configure this app easily by using the experimental config-panel feature: $admin_panel/config-panel.
You can also find some specific actions for this app by using the experimental action feature: $admin_panel/actions.

If you're facing an issue or want to improve this app, please open a new issue in this project: https://github.com/YunoHost-Apps/minidlna_ynh"

ynh_send_readme_to_admin --app_message="$message" --recipients="root" --type="upgrade"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Upgrade completed" --last
